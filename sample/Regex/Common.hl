(defpackage Common)

(data Op (or Finite (Compare Char Op) (If Op Op Op)))

(deftype NFA (-> Op Op))

(type split (-> NFA NFA NFA))
(define (split f g x)
  (If (f x) Finite (g x)))

(type atomic (-> NFA NFA NFA))
(define (atomic f g x)
  (If (f Finite) x (g x)))

(type safeTail (-> (list a) (Maybe (list a))))
(define (safeTail nil) Nothing)
(define (safeTail xs) (Just (tail xs)))
