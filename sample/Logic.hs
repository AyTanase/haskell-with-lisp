module Logic where
import Prelude (const)
axiom :: ((a -> b -> c) -> (a -> b) -> a -> c)
axiom f g x = (f x (g x))
id :: (a -> a)
id = (axiom const const)
(.) :: ((b -> c) -> (a -> b) -> a -> c)
(.) = (axiom (const axiom) const)
fixcompose = ((.) (.))
compose2 = (fixcompose (.))
fixaxiom = (compose2 axiom (.))
axiom2 = (fixaxiom axiom)
axiom3 = (fixaxiom axiom2)
flip :: ((a -> b -> c) -> b -> a -> c)
flip = (axiom3 const (const const))
