(extension MultiParamTypeClasses)

(defpackage Classes
  (:shadow Prelude not)
  (:use (:q Prelude) Data.Maybe))

(class (HasNot a) ()
  (type not (-> a Bool))
  (type or (-> a a a))
  ((or x y) (if (not x) y x)))

(instance (HasNot Bool) ()
  (not Prelude.not))

(instance (HasNot (Maybe a)) ()
  (not isNothing))


(class (Category cat) ()
  (type id (cat a a))
  (type compose (-> (cat b c) (cat a b) (cat a c))))

(class (Functor f cat cat') ((Category cat) (Category cat'))
  (type fmap (-> (cat a b) (cat' (f a) (f b)))))
